unit Venda_Itens;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Data.DB, Vcl.Grids,
  Vcl.DBGrids, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.ComCtrls, Vcl.StdCtrls,
  Vcl.Buttons;

type
  TfrmVendaItens = class(TForm)
    pnFrontal: TPanel;
    pnSuperior: TPanel;
    pnInferior: TPanel;
    dsVenda: TDataSource;
    btnRelatorio: TBitBtn;
    btnExcel: TBitBtn;
    GroupBox3: TGroupBox;
    Label1: TLabel;
    Label2: TLabel;
    cbIntervalo: TComboBox;
    dtInicial: TDateTimePicker;
    dtFinal: TDateTimePicker;
    btnEfetuarConsulta: TSpeedButton;
    GroupBox1: TGroupBox;
    dbProdutos: TDBGrid;
    GroupBox2: TGroupBox;
    DBGrid1: TDBGrid;
    dsItensVenda: TDataSource;
    procedure FormShow(Sender: TObject);
    procedure cbIntervaloChange(Sender: TObject);
    procedure cbIntervaloKeyPress(Sender: TObject; var Key: Char);
    procedure dtFinalKeyPress(Sender: TObject; var Key: Char);
    procedure dtInicialKeyPress(Sender: TObject; var Key: Char);
    procedure btnEfetuarConsultaClick(Sender: TObject);
    procedure consultaHorario ();
    procedure btnRelatorioClick(Sender: TObject);
    procedure dsVendaDataChange(Sender: TObject; Field: TField);

  private
    { Private declarations }
  public
    { Public declarations }
    function VerificaCamposConsulta(): Boolean;
  end;

var
  frmVendaItens: TfrmVendaItens;

implementation

{$R *.dfm}

uses Principal_main, untCadastroCliente, untCadastroProduto, untConsultaCliente,
  untConsultaProdutos, untDmConexao, UntExibeCadastroCliente,
  UntExibeCadastroProduto, UntFiadoCli, UntFuncoes, UntVendas,
  UntRelatorioVendas, UntRelatorioProdutos;




  procedure TfrmVendaItens.btnEfetuarConsultaClick(Sender: TObject);
begin
  VerificaCamposConsulta();
  consultaHorario();
end;

procedure TfrmVendaItens.btnRelatorioClick(Sender: TObject);
begin
with dmconexoes do
  begin
   qrVendas.Close  ;
   qrVendas.SQL.Clear;
   qrVendas.SQL.Add('SELECT * FROM vendas ')  ;
   qrVendas.Open;

   frmRelatorioVendas := TfrmRelatorioVendas.Create(self);
   frmRelatorioVendas.rlr_RelatorioVendas.Preview();
  end;
  //          Application.CreateForm(TfrmRelatorio,frmRelatorio);   //CRIA A TELA
  //          frmRelatorio.showmodal;                               //CHAMA O FORMULARIO
  //          frmRelatorio.Free;                                    //LIBERA A MEMORIA NO FORMULARIO
end;

procedure TfrmVendaItens.cbIntervaloChange(Sender: TObject);
begin
   if cbIntervalo.ItemIndex = 1 then // Com Intervalo
    begin
      dtInicial.Enabled := true;
      dtFinal.Enabled   := true;

      dtInicial.Date    := Date;
      dtFinal.Date      := Date;

      dtInicial.SetFocus;
    end
  else
    begin
      dtInicial.Enabled := false;
      dtFinal.Enabled   := false;
    end;
end;

procedure TfrmVendaItens.cbIntervaloKeyPress(Sender: TObject; var Key: Char);
begin
  if key = #13 then
    begin
      key := #0;

      if cbIntervalo.ItemIndex = 1 then // Com Intervalo
        begin
          dtInicial.Enabled := true;
          dtFinal.Enabled   := true;

          dtInicial.Date    := Date;
          dtFinal.Date      := Date;

          dtInicial.SetFocus;
        end
      else
        begin
          dtInicial.Enabled := false;
          dtFinal.Enabled   := false;
        end;
    end;
end;

procedure TfrmVendaItens.consultaHorario ();
var
  dInicial, dFinal : String;
begin
  with dmconexoes do
    begin
      qrVendas.close;
      qrVendas.SQL.Clear;
      qrVendas.SQL.Add('SELECT * FROM [Robson].[dbo].[VENDAS]WHERE 1=1');


      //*** Filtro por Data ***//
      if cbIntervalo.ItemIndex = 1 then
        begin
          try
            dInicial := FormatDateTime('dd-mm-yyyy', dtInicial.Date)+' 00:00:00';
            dFinal   := FormatDateTime('dd-mm-yyyy',dtFinal.Date)+' 23:59:59';

            qrVendas.sql.Append(' AND (DATAVENDA BETWEEN :PDATAINI AND :PDATAFIM)');
            qrVendas.Parameters.ParamByName('pDataIni').Value := dInicial;
            qrVendas.Parameters.ParamByName('pDataFim').Value := dFinal;
          except
            on e: Exception do
              begin
                Application.MessageBox(pChar('Erro no Intervalo de Datas!'+#13+e.Message),'Aviso - [Consulta de Vendas]',MB_OK+MB_ICONWARNING);
                dtInicial.SetFocus;
                exit;
              end;
          end;
        end;
        qrVendas.Open;
    end;
end;

procedure TfrmVendaItens.dsVendaDataChange(Sender: TObject; Field: TField);
begin
  with dmconexoes do
  begin
      qritensVenda.Close;
      qrItensVenda.SQL.Clear;
      qrItensVenda.SQL.Add('select * from itensVenda where codVenda = :pcodVenda');
      qrItensVenda.Parameters.ParamByName('pcodVenda').Value := qrvendas.FieldByName('codVenda').AsInteger;
      qrItensVenda.open;

  end;

end;

procedure TfrmVendaItens.dtFinalKeyPress(Sender: TObject; var Key: Char);
begin
  if key = #13 then
   btnEfetuarConsultaClick(sender);
end;

procedure TfrmVendaItens.dtInicialKeyPress(Sender: TObject; var Key: Char);
begin
  if key = #13 then
    dtFinal.SetFocus;
end;

procedure TfrmVendaItens.FormShow(Sender: TObject);
begin
  with dmconexoes do

  begin
    qrVendas.Close;
    qrVendas.sql.clear;
    qrVendas.SQL.Add('select * from vendas order by datavenda desc') ;
    qrvendas.Open;

  end;


end;

function TfrmVendaItens.VerificaCamposConsulta: Boolean;
var
  dataInicial, dataFinal: String;
begin
  Result := False;

  // Intervalo de Datas
  if cbIntervalo.ItemIndex = 1 then
    begin
      try
        dataInicial := FormatDateTime('dd-mm-yyyy', dtInicial.Date)+' 00:00:00';
        dataFinal   := FormatDateTime('dd-mm-yyyy', dtFinal.Date)+' 23:59:59';

        if dtFinal.Date < dtInicial.Date then
          begin
            Application.MessageBox('Data Final deve ser Maior que a Data Inicial!', 'Aviso - [AccTransferenciaEstoque]', MB_OK+MB_ICONWARNING);
            exit;
          end;

      except
        on e: Exception do
          begin
            Application.MessageBox(pChar('Erro no Intervalo de Datas!'+#13+e.Message),'Aviso - [Na consulta de Vendas]',MB_OK+MB_ICONWARNING);
            dtInicial.SetFocus;
            exit;
          end;
      end;
    end;
end;
end.
